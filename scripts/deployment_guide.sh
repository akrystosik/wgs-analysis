#!/bin/bash
# VCF PCA Analysis Deployment Guide
# For processing the 40GB VCF file efficiently

echo "==================================================================="
echo "VCF PCA Analysis Deployment Guide"
echo "==================================================================="

# Define paths
VCF_PATH="/mnt/czi-sci-ai/intrinsic-variation-gene-ex/wgs/data/variants/all_vcfs/merged.all.biallelic.maf0.01.vcf.gz"
OUTPUT_DIR="vcf_pca_production_results"
SCRIPTS_DIR="/mnt/czi-sci-ai/intrinsic-variation-gene-ex/wgs"

echo "üìÅ VCF file: $VCF_PATH"
echo "üìä Output directory: $OUTPUT_DIR"
echo ""

# Check if bcftools is available
if command -v bcftools &> /dev/null; then
    echo "‚úÖ bcftools is available"
    BCFTOOLS_AVAILABLE=1
else
    echo "‚ùå bcftools not found - will use zcat approach"
    BCFTOOLS_AVAILABLE=0
fi

echo ""
echo "==================================================================="
echo "DEPLOYMENT OPTIONS"
echo "==================================================================="

echo ""
echo "üöÄ OPTION 1: Quick Test Analysis (Recommended First)"
echo "-------------------------------------------------------------------"
echo "# Extract first 2000 variants for quick validation"
if [ $BCFTOOLS_AVAILABLE -eq 1 ]; then
    echo "bcftools view $VCF_PATH | head -2200 > quick_test.vcf"
else
    echo "zcat $VCF_PATH | head -2200 > quick_test.vcf"
fi
echo "python3 $SCRIPTS_DIR/real_vcf_pca_analysis.py --vcf-path quick_test.vcf --max-variants 2000 --output-dir quick_test_results"
echo ""

echo "üß¨ OPTION 2: Chromosome-Specific Analysis"
echo "-------------------------------------------------------------------"
echo "# Process individual chromosomes for manageable analysis"
for chr in chr1 chr2 chr22; do
    echo "# Chromosome $chr:"
    if [ $BCFTOOLS_AVAILABLE -eq 1 ]; then
        echo "bcftools view -r $chr $VCF_PATH | head -10000 > ${chr}_subset.vcf"
    else
        echo "zcat $VCF_PATH | grep -E '^#|^$chr\\s' | head -10000 > ${chr}_subset.vcf"
    fi
    echo "python3 $SCRIPTS_DIR/real_vcf_pca_analysis.py --vcf-path ${chr}_subset.vcf --chromosome $chr --max-variants 8000 --output-dir ${chr}_pca_results"
    echo ""
done

echo "üè≠ OPTION 3: Production Analysis (Requires HPC)"
echo "-------------------------------------------------------------------"
echo "# Full analysis - requires significant computational resources"
echo "# Recommended: 32+ GB RAM, 8+ cores"
echo "python3 $SCRIPTS_DIR/real_vcf_pca_analysis.py \\"
echo "  --vcf-path $VCF_PATH \\"
echo "  --chromosome chr1 \\"
echo "  --max-variants 50000 \\"
echo "  --n-components 20 \\"
echo "  --output-dir production_chr1_results"
echo ""

echo "üìä OPTION 4: Multi-Chromosome Parallel Processing"
echo "-------------------------------------------------------------------"
echo "# Process multiple chromosomes in parallel"
echo "# Create job array for HPC systems"
echo "# chromosomes=(chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22)"
echo "# for chr in \"\${chromosomes[@]}\"; do"
echo "#   sbatch --job-name=pca_\$chr \\"
echo "#          --mem=16G \\"
echo "#          --cpus-per-task=4 \\"
echo "#          --wrap=\"python3 $SCRIPTS_DIR/real_vcf_pca_analysis.py --chromosome \$chr --max-variants 20000 --output-dir \${chr}_results\""
echo "# done"
echo ""

echo "==================================================================="
echo "RESOURCE REQUIREMENTS"
echo "==================================================================="
echo ""
echo "üíæ Memory Requirements:"
echo "  ‚Ä¢ Quick test (2K variants):     4-8 GB RAM"
echo "  ‚Ä¢ Chromosome subset (10K):      8-16 GB RAM"  
echo "  ‚Ä¢ Large analysis (50K):         16-32 GB RAM"
echo "  ‚Ä¢ Full genome analysis:         32-64 GB RAM"
echo ""
echo "‚è±Ô∏è  Time Estimates:"
echo "  ‚Ä¢ Quick test:                   5-10 minutes"
echo "  ‚Ä¢ Single chromosome:            30-60 minutes"
echo "  ‚Ä¢ Large analysis:               2-4 hours"
echo "  ‚Ä¢ Full genome:                  6-12 hours"
echo ""
echo "üñ•Ô∏è  Recommended Environment:"
echo "  ‚Ä¢ HPC cluster or high-memory server"
echo "  ‚Ä¢ bcftools installed for efficient VCF handling"
echo "  ‚Ä¢ Python 3.8+ with scipy stack"
echo "  ‚Ä¢ 100+ GB disk space for intermediate files"
echo ""

echo "==================================================================="
echo "SAMPLE EXECUTION COMMANDS"
echo "==================================================================="
echo ""
echo "# 1. Quick validation (start here):"
echo "cd $SCRIPTS_DIR"
echo "python3 quick_vcf_pca.py  # Uses synthetic data"
echo ""
echo "# 2. Real data test:"
echo "python3 real_vcf_pca_analysis.py --chromosome chr22 --max-variants 1000 --output-dir chr22_test"
echo ""
echo "# 3. Production run:"
echo "python3 real_vcf_pca_analysis.py --chromosome chr1 --max-variants 20000 --n-components 15 --output-dir chr1_production"
echo ""

echo "==================================================================="
echo "EXPECTED OUTPUTS"
echo "==================================================================="
echo ""
echo "üìà Visualizations:"
echo "  ‚Ä¢ real_vcf_pca_ancestry.png      - Main PCA plot by ancestry"
echo "  ‚Ä¢ real_vcf_pca_populations.png   - Detailed population structure"
echo "  ‚Ä¢ real_vcf_pca_multicomponent.png - Multi-PC analysis"
echo "  ‚Ä¢ real_vcf_pca_dashboard.png     - Summary dashboard"
echo ""
echo "üìä Data Files:"
echo "  ‚Ä¢ real_vcf_pca_results.csv       - PCA coordinates & metadata"
echo "  ‚Ä¢ analysis_report.txt            - Detailed analysis summary"
echo ""
echo "üéØ Expected Results:"
echo "  ‚Ä¢ Clear separation of continental ancestry groups"
echo "  ‚Ä¢ PC1: ~10-15% variance (EUR vs AFR separation)"
echo "  ‚Ä¢ PC2: ~3-8% variance (EAS distinction)"
echo "  ‚Ä¢ Successful ancestry mapping for MAGE samples"
echo ""

echo "==================================================================="
echo "TROUBLESHOOTING"
echo "==================================================================="
echo ""
echo "üêõ Common Issues:"
echo ""
echo "1. Memory Error:"
echo "   ‚Üí Reduce --max-variants parameter"
echo "   ‚Üí Use chromosome-specific analysis"
echo "   ‚Üí Increase system memory allocation"
echo ""
echo "2. Timeout/Slow Processing:"
echo "   ‚Üí Install bcftools for faster VCF processing"
echo "   ‚Üí Use SSD storage for temporary files"
echo "   ‚Üí Process smaller chromosomes first (chr22, chr21)"
echo ""
echo "3. No Ancestry Mapping:"
echo "   ‚Üí Check sample ID formats in VCF"
echo "   ‚Üí Verify MAGE ancestry files are accessible"
echo "   ‚Üí Review sample overlap between VCF and ancestry data"
echo ""
echo "4. Empty Results:"
echo "   ‚Üí Verify VCF file integrity"
echo "   ‚Üí Check chromosome naming convention (chr1 vs 1)"
echo "   ‚Üí Ensure sufficient variants pass filtering"
echo ""

echo "==================================================================="
echo "‚úÖ DEPLOYMENT GUIDE COMPLETE"
echo "==================================================================="
echo ""
echo "üöÄ Ready to proceed with VCF-based PCA analysis!"
echo "üí° Start with OPTION 1 (Quick Test) to validate the pipeline"
echo "üìß All scripts and documentation are ready for deployment"
echo ""